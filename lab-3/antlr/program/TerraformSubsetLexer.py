# Generated from TerraformSubset.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,15,139,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,
        2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,
        4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,
        6,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,
        9,91,8,9,1,10,4,10,94,8,10,11,10,12,10,95,1,10,1,10,4,10,100,8,10,
        11,10,12,10,101,3,10,104,8,10,1,11,1,11,1,11,1,11,5,11,110,8,11,
        10,11,12,11,113,9,11,1,11,1,11,1,12,1,12,5,12,119,8,12,10,12,12,
        12,122,9,12,1,13,1,13,5,13,126,8,13,10,13,12,13,129,9,13,1,13,1,
        13,1,14,4,14,134,8,14,11,14,12,14,135,1,14,1,14,0,0,15,1,1,3,2,5,
        3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,
        1,0,6,1,0,48,57,2,0,34,34,92,92,3,0,65,90,95,95,97,122,4,0,48,57,
        65,90,95,95,97,122,2,0,10,10,13,13,3,0,9,10,13,13,32,32,147,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,1,31,1,0,
        0,0,3,40,1,0,0,0,5,42,1,0,0,0,7,44,1,0,0,0,9,53,1,0,0,0,11,62,1,
        0,0,0,13,69,1,0,0,0,15,77,1,0,0,0,17,79,1,0,0,0,19,90,1,0,0,0,21,
        93,1,0,0,0,23,105,1,0,0,0,25,116,1,0,0,0,27,123,1,0,0,0,29,133,1,
        0,0,0,31,32,5,112,0,0,32,33,5,114,0,0,33,34,5,111,0,0,34,35,5,118,
        0,0,35,36,5,105,0,0,36,37,5,100,0,0,37,38,5,101,0,0,38,39,5,114,
        0,0,39,2,1,0,0,0,40,41,5,123,0,0,41,4,1,0,0,0,42,43,5,125,0,0,43,
        6,1,0,0,0,44,45,5,114,0,0,45,46,5,101,0,0,46,47,5,115,0,0,47,48,
        5,111,0,0,48,49,5,117,0,0,49,50,5,114,0,0,50,51,5,99,0,0,51,52,5,
        101,0,0,52,8,1,0,0,0,53,54,5,118,0,0,54,55,5,97,0,0,55,56,5,114,
        0,0,56,57,5,105,0,0,57,58,5,97,0,0,58,59,5,98,0,0,59,60,5,108,0,
        0,60,61,5,101,0,0,61,10,1,0,0,0,62,63,5,111,0,0,63,64,5,117,0,0,
        64,65,5,116,0,0,65,66,5,112,0,0,66,67,5,117,0,0,67,68,5,116,0,0,
        68,12,1,0,0,0,69,70,5,100,0,0,70,71,5,101,0,0,71,72,5,115,0,0,72,
        73,5,116,0,0,73,74,5,114,0,0,74,75,5,111,0,0,75,76,5,121,0,0,76,
        14,1,0,0,0,77,78,5,61,0,0,78,16,1,0,0,0,79,80,5,46,0,0,80,18,1,0,
        0,0,81,82,5,116,0,0,82,83,5,114,0,0,83,84,5,117,0,0,84,91,5,101,
        0,0,85,86,5,102,0,0,86,87,5,97,0,0,87,88,5,108,0,0,88,89,5,115,0,
        0,89,91,5,101,0,0,90,81,1,0,0,0,90,85,1,0,0,0,91,20,1,0,0,0,92,94,
        7,0,0,0,93,92,1,0,0,0,94,95,1,0,0,0,95,93,1,0,0,0,95,96,1,0,0,0,
        96,103,1,0,0,0,97,99,5,46,0,0,98,100,7,0,0,0,99,98,1,0,0,0,100,101,
        1,0,0,0,101,99,1,0,0,0,101,102,1,0,0,0,102,104,1,0,0,0,103,97,1,
        0,0,0,103,104,1,0,0,0,104,22,1,0,0,0,105,111,5,34,0,0,106,107,5,
        92,0,0,107,110,9,0,0,0,108,110,8,1,0,0,109,106,1,0,0,0,109,108,1,
        0,0,0,110,113,1,0,0,0,111,109,1,0,0,0,111,112,1,0,0,0,112,114,1,
        0,0,0,113,111,1,0,0,0,114,115,5,34,0,0,115,24,1,0,0,0,116,120,7,
        2,0,0,117,119,7,3,0,0,118,117,1,0,0,0,119,122,1,0,0,0,120,118,1,
        0,0,0,120,121,1,0,0,0,121,26,1,0,0,0,122,120,1,0,0,0,123,127,5,35,
        0,0,124,126,8,4,0,0,125,124,1,0,0,0,126,129,1,0,0,0,127,125,1,0,
        0,0,127,128,1,0,0,0,128,130,1,0,0,0,129,127,1,0,0,0,130,131,6,13,
        0,0,131,28,1,0,0,0,132,134,7,5,0,0,133,132,1,0,0,0,134,135,1,0,0,
        0,135,133,1,0,0,0,135,136,1,0,0,0,136,137,1,0,0,0,137,138,6,14,0,
        0,138,30,1,0,0,0,10,0,90,95,101,103,109,111,120,127,135,1,6,0,0
    ]

class TerraformSubsetLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    BOOLEAN = 10
    NUMBER = 11
    STRING = 12
    IDENTIFIER = 13
    COMMENT = 14
    WS = 15

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'provider'", "'{'", "'}'", "'resource'", "'variable'", "'output'", 
            "'destroy'", "'='", "'.'" ]

    symbolicNames = [ "<INVALID>",
            "BOOLEAN", "NUMBER", "STRING", "IDENTIFIER", "COMMENT", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "BOOLEAN", "NUMBER", "STRING", "IDENTIFIER", 
                  "COMMENT", "WS" ]

    grammarFileName = "TerraformSubset.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


